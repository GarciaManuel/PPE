scalar Upload

type Query {
  "List of all users"
  users: [User!]!
  "Log in to the system"
  login(email: String!, password: String!): ResultGeneral!
  "Get user information with the token"
  me: ResultGeneral!
  "Obtain patient's measures"
  getMeasures(patient: String!): [Measure!]!
  "Get all pacients"
  getPacients(podiatrist: ID!): ResultGeneral!
  "Get a pacients"
  getPacient(podiatrist: ID!, patient: ID!): ResultGeneral!
}

type Mutation {
  "Users registration"
  register(user: UserInput): ResultGeneral!
  deleteUser(userId: Int!): ResultGeneral!
  addMeasure(measure: MeasureInput): ResultGeneral!
  uploadCSV(csvFile: Upload): ResultGeneral!
  ##deleteMeasure(measureId: String): ResultGeneral!
}

type User {
  id: ID!
  name: String!
  lastname: String!
  email: String!
  password: String!
  podiatrist: Boolean
  currentPodiatrist: ID
  registerDate: String!
  lastMeetingDate: String
}

type Sensor {
  number: Int!
  posX: Float!
  posY: Float!
  averagePressureS: Float!
  minPressureS: Float!
  maxPressureS: Float!
}

type Measure {
  patientId: String!
  date: String!
  duration: String
  csv: String
  sensors: [Sensor]!
}

type Meeting {
  id: ID!
  pacient: String!
  anomaly: Boolean!
  podiatrist: String!
  meetingDate: String!
}

input UserInput {
  name: String!
  lastname: String!
  email: String!
  password: String!
  podiatrist: Boolean
  currentPodiatrist: ID
}

input SensorInput {
  number: Int
  posX: Float
  posY: Float
  averagePressureS: Float!
  minPressureS: Float!
  maxPressureS: Float!
}

input MeasureInput {
  patientId: String!
  duration: String
  csv: String
  sensors: [SensorInput]!
}

type ResultGeneral {
  status: Boolean!
  message: String!
}

extend type ResultGeneral {
  measure: Measure
}

extend type ResultGeneral {
  user: User
}

extend type ResultGeneral {
  token: String
}
extend type ResultGeneral {
  name: String!
  lastName: String!
  email: String!
  password: String!
}
extend type ResultGeneral{
  pacients: [User!]!
}
extend type ResultGeneral{
  patient: User!
}